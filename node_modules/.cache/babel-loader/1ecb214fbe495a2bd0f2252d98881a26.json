{"ast":null,"code":"var _jsxFileName = \"/home/berkc/Desktop/React-Basic-Crud-Operations/src/components/organism/CreateTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AtomSelection from \"../atoms/AtomSelection\";\nimport { TASK_STATUS } from \"../constant/taskStatuses\";\nimport AtomButtonRsuite from \"../atoms/AtomButton\";\nimport { AtomInputField } from \"../atoms/AtomInputField\";\nimport TaskService from \"../../services/TaskService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTaskForm(_ref) {\n  _s();\n\n  let {\n    handleClose\n  } = _ref;\n  const [id, setId] = useState(\"\");\n  const [taskName, setTaskName] = useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [status, setStatus] = useState(\"Not Started\"); // const [taskObject , setTaskObject] = useState({\n  //     id : \"\",\n  //     taskName : \"\",\n  //     projectName : \"\",\n  //     status : \"Not Started\"\n  // })\n  // const handleChange = (event) => {\n  //     const { name, value } = event.target;\n  //     setTaskObject(prevState => ({\n  //         ...prevState,\n  //         [name]: value\n  //     }));\n  // };\n\n  const taskService = new TaskService();\n\n  const handleChangeId = event => {\n    setId(() => event.target.value);\n  };\n\n  const handleChangeTaskName = event => {\n    setTaskName(() => event.target.value);\n  };\n\n  const handleChangeProjectName = event => {\n    setProjectName(() => event.target.value);\n  };\n\n  const handleChangeStatus = event => {\n    setStatus(() => event.target.value);\n  };\n\n  const createTaskFunc = async event => {\n    event.preventDefault();\n    let obj = {\n      id: id,\n      task_name: taskName,\n      project_name: projectName,\n      status: status\n    };\n\n    try {\n      await taskService.createTask(obj);\n      handleClose();\n    } catch (error) {\n      alert(\"Please enter values to field CORRECTLY!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AtomInputField, {\n          className: \"input-form\",\n          label: \"Id\",\n          type: \"input\",\n          name: \"id\",\n          value: id,\n          onChange: handleChangeId,\n          placeholder: \"Please Enter Id Number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(AtomInputField, {\n          className: \"input-form\",\n          label: \"Task Name\",\n          type: \"input\",\n          name: \"task_name\",\n          value: taskName,\n          onChange: handleChangeTaskName,\n          placeholder: \"Please Enter Task Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AtomInputField, {\n          className: \"input-form\",\n          label: \"Project Name\",\n          type: \"input\",\n          name: \"project_name\",\n          value: projectName,\n          onChange: handleChangeProjectName,\n          placeholder: \"Please Enter Id Number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AtomSelection, {\n          className: \"selection-form\",\n          id: \"selection_task\",\n          label: \"Status:\",\n          name: \"status\",\n          value: status,\n          onChange: handleChangeStatus,\n          options: TASK_STATUS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AtomButtonRsuite, {\n          className: \"btn-create-update\",\n          text: \"Create\",\n          onClick: createTaskFunc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AtomButtonRsuite, {\n          className: \"btn-close\",\n          onClick: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateTaskForm, \"ENqNhY5AtWZjUasR0OX9p37fFbE=\");\n\n_c = CreateTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTaskForm\");","map":{"version":3,"names":["React","useState","AtomSelection","TASK_STATUS","AtomButtonRsuite","AtomInputField","TaskService","CreateTaskForm","handleClose","id","setId","taskName","setTaskName","projectName","setProjectName","status","setStatus","taskService","handleChangeId","event","target","value","handleChangeTaskName","handleChangeProjectName","handleChangeStatus","createTaskFunc","preventDefault","obj","task_name","project_name","createTask","error","alert"],"sources":["/home/berkc/Desktop/React-Basic-Crud-Operations/src/components/organism/CreateTaskForm.js"],"sourcesContent":["\nimport React, { useState } from \"react\"\nimport AtomSelection from \"../atoms/AtomSelection\";\nimport { TASK_STATUS } from \"../constant/taskStatuses\";\nimport AtomButtonRsuite from \"../atoms/AtomButton\";\nimport { AtomInputField } from \"../atoms/AtomInputField\";\nimport TaskService from \"../../services/TaskService\";\n\nexport default function CreateTaskForm( {handleClose} ){\n\n    const [id , setId] = useState(\"\");\n    const [taskName , setTaskName] = useState(\"\");\n    const [projectName , setProjectName] = useState(\"\");\n    const [status , setStatus] = useState(\"Not Started\");\n\n    // const [taskObject , setTaskObject] = useState({\n    //     id : \"\",\n    //     taskName : \"\",\n    //     projectName : \"\",\n    //     status : \"Not Started\"\n    // })\n    // const handleChange = (event) => {\n    //     const { name, value } = event.target;\n    //     setTaskObject(prevState => ({\n    //         ...prevState,\n    //         [name]: value\n    //     }));\n    // };\n\n    \n    const taskService = new TaskService();\n\n    const handleChangeId = (event) => {\n        setId( () =>  event.target.value )\n    }\n\n    const handleChangeTaskName = (event) => {\n        setTaskName( () => event.target.value)\n    }\n    \n    const handleChangeProjectName = (event) => {\n        setProjectName( () =>  event.target.value)\n    }\n\n    const handleChangeStatus = (event) => {\n        setStatus( () => event.target.value)\n    }\n\n    const createTaskFunc = async(event) => {\n        \n        event.preventDefault();\n\n        let obj ={\n            id : id,\n            task_name : taskName,\n            project_name : projectName,\n            status : status\n          }\n        \n       try{\n            await taskService.createTask(obj); \n            handleClose();\n       }\n       catch(error){\n            alert(\"Please enter values to field CORRECTLY!\");\n       }\n       \n       \n    }\n\n\n    return (\n        <div className=\"popup-box\">\n            <div className=\"box\">\n               <form>\n\n                <h5>Create Task</h5>\n                \n                 <AtomInputField \n                    className = \"input-form\"\n                    label = \"Id\" \n                    type=\"input\" \n                    name=\"id\"\n                    value={id}\n                    onChange= {handleChangeId}\n                    placeholder=\"Please Enter Id Number\"\n                    required={true}\n                    />\n\n                <AtomInputField \n                    className = \"input-form\"\n                    label = \"Task Name\" \n                    type=\"input\"\n                    name=\"task_name\"\n                    value={taskName}\n                    onChange= {handleChangeTaskName}\n                    placeholder=\"Please Enter Task Name\"\n                    required={true}/>\n                    \n                <AtomInputField \n                    className = \"input-form\"\n                    label = \"Project Name\" \n                    type=\"input\" \n                    name=\"project_name\"\n                    value={projectName}\n                    onChange= {handleChangeProjectName}\n                    placeholder=\"Please Enter Id Number\"\n                    required={true}/>\n                <AtomSelection\n                    className=\"selection-form\"\n                    id = \"selection_task\"\n                    label=\"Status:\"\n                    name=\"status\"\n                    value={status}\n                    onChange= {handleChangeStatus}\n                    options = { TASK_STATUS } />\n                \n                <AtomButtonRsuite \n                    className = \"btn-create-update\"\n                    text=\"Create\"\n                    onClick={ createTaskFunc } />  \n\n                <AtomButtonRsuite \n                    className=\"btn-close\"\n                    onClick={handleClose} />\n\n               </form> \n            </div>\n        </div>\n    )\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}